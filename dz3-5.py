# Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов,
# взятых из трёх списков (по одному из каждого):
# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
#         Например:
# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]
# Документировать код функции.
# Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы
# слов в шутках (когда каждое слово можно использовать только в одной шутке)?
# Сможете ли вы сделать аргументы именованными?

from random import randrange, choice

nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

def get_jokes(number, repeat = False):
    """
    Функия возвращает список шуток, составленных из трех списков случайных слов
    :param number: количество шуток
    :param repeat: возвращать повторяющиеся/не повторяющиеся шутки
    :return список шуток

    """
    non, adv, adj = nouns.copy(), adverbs.copy(), adjectives.copy()
    jokes = []
    jokes_min = min(non, adv, adj)

    while number and len(jokes_min):
        num = randrange(len(jokes_min))
        if repeat:
            jokes.append(f"{non.pop(num)} {adv.pop(num)} {adj.pop(num)}")
        else:
            jokes.append(f'{choice(non)} {choice(adj)} {choice(adv)}')
        number -= 1
    return jokes

print(get_jokes(2, True))


