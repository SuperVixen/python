# Подумайте, как можно сделать оптимизацию кода по памяти, по скорости.
# Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать из этих элементов список с сохранением порядка их следования в исходном списке, например:
# src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# result = [23, 1, 3, 10, 4, 11]
# Подсказка: напишите сначала решение «в лоб». Потом подумайте об оптимизации.

src = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
#oke, a direct decision "head-on"

# print([i for i in src if src.count(i) == 1])

#аптимизация
list_from_dict = []

dict_from_src = {el: 0 for el in src}#делаю словарь из списка
for i in src:                                     #считаю количество вхождений элементов списка в словарь
   dict_from_src[i] += 1                   #ключ - уникальный элемент списка, значение - сколько раз он появлялся в списке
for k, v in dict_from_src.items():
    if v == 1:
        list_from_dict.append(k)
print(list_from_dict)



